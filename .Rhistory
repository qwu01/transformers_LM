install.packages(c("circular", "UpSetR", "WGCNA"))
library(WGCNA)
BiocManager::install("GO.db")
library(WGCNA)
install.packages("impute")
BiocManager::install("impute")
library(WGCNA)
install.packages("preprocessCore")
BiocManager::install("preprocessCore")
library(WGCNA)
library(UpSetR)
library(circular)
library(RColorBrewer)
library(pathfindR)
install.packages("preprocessCore")
install.packages("preprocessCore")
tryCatch(install.packages("preprocessCore"),
BiocManager::install("preprocessCore"))
library(WGCNA)
library(UpSetR)
install.packages("BiocManager")
BiocManager::install(version = "3.10")
tryCatch(install.packages("preprocessCore"),
BiocManager::install("preprocessCore"))
install.packages(tidyverse)
install.packages("tidyverse")
install.packages(c("circular", "data.table", "DT", "glassoFast", "igraph", "msigdbr", "netgsa", "pathfindR", "sqldf", "UpSetR", "WGCNA"))
library(tidyverse)
library(ggplot2)
library(glassoFast)
BiocManager::install("preprocessCore")
BiocManager::install("preprocessCore")
library(pathfindR)
install.packages(mlr)
install.packages('mlr')
install.packages("caret")
1-exp(-3/2)
1-exp(-3/5)
exp(-3/2)
(11*1.2**2 + 14*1.5**2) / (11+14)
(11*1.2^2 + 14*1.5^2) / (11+14)
pt(1-0.05/2, 11+14)
?pt()
qt(1-0.05/2, 25)
pt(1-0.05/2, 25)
pt(2.059539, 25)
qt(1-0.05/2, 25)
qt(0.05/2, 25, lower.tail = FALSE)
(13.8 - 12.9) + c(1, -1) * sqrt(1.8936*(1/12 + 1/15)) * qt(1 - 0.05/2, 25)
pnorm((510.77 - 530) / (sqrt(8100/36)))
(510.77 - 530) / (sqrt(8100/36))
(16+55*2+228*3)/900
nchoosek
choose(3,0) * 0.9**0 * 0.1**3
choose(3,0) * 0.9**0 * 0.1**3 * 300
choose(3,1) * 0.9**1 * 0.1**2 * 300
choose(3,2) * 0.9**2 * 0.1**1 * 300
choose(3,3) * 0.9**3 * 0.1**0 * 300
qt(0.975, 63)
qt(0.95, 63)
qt(0.975, 63)
33 + c(-1, 1) * sqrt(256/33)
qchisq(p=0.025,df = 63)
qchisq(p=0.975,df = 63)
63*256/c(42.95,86.83)
3/(sqrt(256/64))
qt(0.975,63)
qt(63,0.975)
qt(0.975,63)
3/sqrt(256/64)
qnorm(0.95)
530 - 1.645 * sqrt(8100/36)
(505.325 - 530)/sqrt(8100/36)
sqrt(8100/36)
ln(e)
log(e)
log(exp)
log(exp(1))
5/(log12)
log(12)+log(13)
log(12*13)
5/log(12*11.2*13.5*12.3*11.9)
44*42/90
46*42/90
44*48/90
46*48/90
qchisq(0.01,1)
qchisq(0.99,1)
(2.3+1.9+3.3+2.9+2.2+1.3)/6
(3.7+5.4+2.1+11.7+2.8+2.4)/6
x - x_bar
x = c(2.3,1.9,3.3,2.9,2.2,1.3)
y = c(3.7,5.4,2.1,11.7,2.8,2.4)
x_bar = 2.32
y_bar = 4.6833
x - x_bar
(x - x_bar)**2
sum((x - x_bar)**2)
sum((y - y_bar)**2)
y - y_bar
sum((x - x_bar)**2) + sum((y - y_bar)**2)
qt(0.975,10)
qt(0.975,63)
(2.32-4.6833)/sqrt(6.868/3)
sum((x - x_bar)**2)/5
sum((y - y_bar)**2)/5
13.22967/0.50568
qf(0.975,5,5)
qchisq(0.95,4)
load("D:/University of Guelph/OneDrive - University of Guelph/Jones_Lab_Project_Summer_2020/April_20_2020.RData")
paired_N_T_matrix %>% head
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(glassoFast)
library(graphite)
library(igraph)
library(msigdbr)
library(netgsa)
library(Rgraphviz)
library(fgsea)
library(TCGAbiolinks)
library(dplyr)
library(DT)
library(sqldf)
library(data.table)
library(SummarizedExperiment)
library(edgeR)
library(pathview)
library(gage)
library(gageData)
library(plyr)
library(pathfindR)
library(RColorBrewer)
library(circular)
library(UpSetR)
library(WGCNA)
library(DGCA)
do_normalization_using_edgeR_method_is_TMM_output_is_CPM = function(this){
dgList = DGEList(counts=this, genes=rownames(this))
countCheck = cpm(dgList) > 1 # filter: extremly low expression genes.
keep = which(rowSums(countCheck) >= 2)
dgList = dgList[keep,]
dgList = calcNormFactors(dgList, method="TMM") # TMM.
return(cpm(dgList))
}
### modify the plot function. ###
plot_boxplot_please = function(input_table, what_on_y) {
p = ggplot(input_table, aes_string(x="Tumor", y=what_on_y))
p = p + facet_wrap(~TumorGroup, scales = "free_x", nrow = 1)
p = p + geom_violin()
p = p + theme_classic()
###
pp = ggplotGrob(p)
facet.columns = pp$layout$l[grepl("panel", pp$layout$name)]
x.var = sapply(ggplot_build(p)$layout$panel_scales_x, function(l) length(l$range$range))
pp$widths[facet.columns] <- pp$widths[facet.columns] * x.var
grid::grid.draw(pp)
###
}
### modify the plot function. ###
# Specifically, First, add Tumor position column and facet the plot accordingly.
# Second, color it.
# That's it. Stop here.
give_me_cor_and_p_matrix_please = function(cpm_mat) {
cpm_mat = t(cpm_mat)
cor_and_p_mat = corAndPvalue(log2(cpm_mat+1), log2(cpm_mat[,gene_id_1]+1),
use = "pairwise.complete.obs", method = "pearson", alternative = "two.sided")
cor_mat = cor_and_p_mat$cor; p_mat = cor_and_p_mat$p
colnames(cor_mat) = paste(colnames(cor_mat), "r_value", sep = ".")
colnames(p_mat) = paste(colnames(p_mat), "p_value", sep = ".")
res_mat = cbind(cor_mat, p_mat)
res_mat = res_mat[,sort(colnames(res_mat))]
res_mat = res_mat[,c(2,1,4,3,6,5,8,7,10,9,12,11)]
return(res_mat)
}
plot_this_gene_in_each_stage = function(DataFrame_for_Stage_expression, gene_string){
p = ggplot(DataFrame_for_Stage_expression, aes_string(x="ajcc_pathologic_stage", y=gene_string))
#p = p + facet_wrap(~subtype_BRCA_Subtype_PAM50, scales = "free_x", nrow = 1)
p = p + geom_boxplot()
p = p + theme_classic()
return(p)
}
plot_this_gene_in_each_stage.merged = function(DataFrame_for_Stage_expression, gene_string){
p = ggplot(DataFrame_for_Stage_expression, aes_string(x="subtype_pathologic_stage", y=gene_string))
#p = p + facet_wrap(~subtype_BRCA_Subtype_PAM50, scales = "free_x", nrow = 1)
p = p + geom_boxplot()
p = p + theme_classic()
return(p)
}
get_ddcor_res = function(paired_cpm_matrix, design_matrix, compare_vector, GOI){
res = ddcorAll(inputMat = t(paired_cpm_matrix), design = design_matrix,
compare = compare_vector, splitSet = GOI, corrType = "pearson",
adjust = "fdr", nPerm = 0, nPairs = "all")
return(res)
}
paired_N_T_matrix %>% head
table(paired_N_T_matrix$subtype)
table(paired_N_T_matrix$stage)
setwd("~/GitHub/transformers_LM")
BiocManager::install("UniProt.ws")
